[
  {
    "name": "Form#sanitize",
    "filePath": "src/Form.js",
    "lines": [
      {
        "lineNumber": 223,
        "line": "  /**"
      },
      {
        "lineNumber": 224,
        "line": "   * Sanitize an html string."
      },
      {
        "lineNumber": 225,
        "line": "   *"
      },
      {
        "lineNumber": 226,
        "line": "   * @param string"
      },
      {
        "lineNumber": 227,
        "line": "   * @returns {*}"
      },
      {
        "lineNumber": 228,
        "line": "   */"
      },
      {
        "lineNumber": 229,
        "line": "  sanitize(dirty) {"
      }
    ],
    "codeParams": [
      "dirty"
    ],
    "docParams": [
      "string"
    ]
  },
  {
    "name": "Webform#setForm",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 603,
        "line": "  /**"
      },
      {
        "lineNumber": 604,
        "line": "   * Sets the JSON schema for the form to be rendered."
      },
      {
        "lineNumber": 605,
        "line": "   *"
      },
      {
        "lineNumber": 606,
        "line": "   * @example"
      },
      {
        "lineNumber": 607,
        "line": "   * import Webform from 'formiojs/Webform';"
      },
      {
        "lineNumber": 608,
        "line": "   * let form = new Webform(document.getElementById('formio'));"
      },
      {
        "lineNumber": 609,
        "line": "   * form.setForm({"
      },
      {
        "lineNumber": 610,
        "line": "   *   components: ["
      },
      {
        "lineNumber": 611,
        "line": "   *     {"
      },
      {
        "lineNumber": 612,
        "line": "   *       type: 'textfield',"
      },
      {
        "lineNumber": 613,
        "line": "   *       key: 'firstName',"
      },
      {
        "lineNumber": 614,
        "line": "   *       label: 'First Name',"
      },
      {
        "lineNumber": 615,
        "line": "   *       placeholder: 'Enter your first name.',"
      },
      {
        "lineNumber": 616,
        "line": "   *       input: true"
      },
      {
        "lineNumber": 617,
        "line": "   *     },"
      },
      {
        "lineNumber": 618,
        "line": "   *     {"
      },
      {
        "lineNumber": 619,
        "line": "   *       type: 'textfield',"
      },
      {
        "lineNumber": 620,
        "line": "   *       key: 'lastName',"
      },
      {
        "lineNumber": 621,
        "line": "   *       label: 'Last Name',"
      },
      {
        "lineNumber": 622,
        "line": "   *       placeholder: 'Enter your last name',"
      },
      {
        "lineNumber": 623,
        "line": "   *       input: true"
      },
      {
        "lineNumber": 624,
        "line": "   *     },"
      },
      {
        "lineNumber": 625,
        "line": "   *     {"
      },
      {
        "lineNumber": 626,
        "line": "   *       type: 'button',"
      },
      {
        "lineNumber": 627,
        "line": "   *       action: 'submit',"
      },
      {
        "lineNumber": 628,
        "line": "   *       label: 'Submit',"
      },
      {
        "lineNumber": 629,
        "line": "   *       theme: 'primary'"
      },
      {
        "lineNumber": 630,
        "line": "   *     }"
      },
      {
        "lineNumber": 631,
        "line": "   *   ]"
      },
      {
        "lineNumber": 632,
        "line": "   * });"
      },
      {
        "lineNumber": 633,
        "line": "   *"
      },
      {
        "lineNumber": 634,
        "line": "   * @param {Object} form - The JSON schema of the form @see https://examples.form.io/example for an example JSON schema."
      },
      {
        "lineNumber": 635,
        "line": "   * @returns {*}"
      },
      {
        "lineNumber": 636,
        "line": "   */"
      },
      {
        "lineNumber": 637,
        "line": "  setForm(form, flags) {"
      }
    ],
    "codeParams": [
      "form",
      "flags"
    ],
    "docParams": [
      "form"
    ]
  },
  {
    "name": "Webform#restoreDraft",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 815,
        "line": "  /**"
      },
      {
        "lineNumber": 816,
        "line": "   * Restores a draft submission based on the user who is authenticated."
      },
      {
        "lineNumber": 817,
        "line": "   *"
      },
      {
        "lineNumber": 818,
        "line": "   * @param {userId} - The user id where we need to restore the draft from."
      },
      {
        "lineNumber": 819,
        "line": "   */"
      },
      {
        "lineNumber": 820,
        "line": "  restoreDraft(userId) {"
      }
    ],
    "codeParams": [
      "userId"
    ],
    "docParams": [
      "-"
    ]
  },
  {
    "name": "Webform#showErrors",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 1138,
        "line": "  /* eslint-disable no-unused-vars */"
      },
      {
        "lineNumber": 1139,
        "line": "  showErrors(error, triggerEvent, onChange) {"
      }
    ],
    "codeParams": [
      "error",
      "triggerEvent",
      "onChange"
    ],
    "docParams": [
      "error"
    ]
  },
  {
    "name": "Webform#onChange",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 1288,
        "line": "  /**"
      },
      {
        "lineNumber": 1289,
        "line": "   * Trigger the change event for this form."
      },
      {
        "lineNumber": 1290,
        "line": "   *"
      },
      {
        "lineNumber": 1291,
        "line": "   * @param changed"
      },
      {
        "lineNumber": 1292,
        "line": "   * @param flags"
      },
      {
        "lineNumber": 1293,
        "line": "   */"
      },
      {
        "lineNumber": 1294,
        "line": "  onChange(flags, changed, modified, changes) {"
      }
    ],
    "codeParams": [
      "flags",
      "changed",
      "modified",
      "changes"
    ],
    "docParams": [
      "changed",
      "flags"
    ]
  },
  {
    "name": "Webform#submit",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 1480,
        "line": "  /**"
      },
      {
        "lineNumber": 1481,
        "line": "   * Submits the form."
      },
      {
        "lineNumber": 1482,
        "line": "   *"
      },
      {
        "lineNumber": 1483,
        "line": "   * @example"
      },
      {
        "lineNumber": 1484,
        "line": "   * import Webform from 'formiojs/Webform';"
      },
      {
        "lineNumber": 1485,
        "line": "   * let form = new Webform(document.getElementById('formio'));"
      },
      {
        "lineNumber": 1486,
        "line": "   * form.src = 'https://examples.form.io/example';"
      },
      {
        "lineNumber": 1487,
        "line": "   * form.submission = {data: {"
      },
      {
        "lineNumber": 1488,
        "line": "   *   firstName: 'Joe',"
      },
      {
        "lineNumber": 1489,
        "line": "   *   lastName: 'Smith',"
      },
      {
        "lineNumber": 1490,
        "line": "   *   email: 'joe@example.com'"
      },
      {
        "lineNumber": 1491,
        "line": "   * }};"
      },
      {
        "lineNumber": 1492,
        "line": "   * form.submit().then((submission) => {"
      },
      {
        "lineNumber": 1493,
        "line": "   *   console.log(submission);"
      },
      {
        "lineNumber": 1494,
        "line": "   * });"
      },
      {
        "lineNumber": 1495,
        "line": "   *"
      },
      {
        "lineNumber": 1496,
        "line": "   * @param {boolean} before - If this submission occured from the before handlers."
      },
      {
        "lineNumber": 1497,
        "line": "   *"
      },
      {
        "lineNumber": 1498,
        "line": "   * @returns {Promise} - A promise when the form is done submitting."
      },
      {
        "lineNumber": 1499,
        "line": "   */"
      },
      {
        "lineNumber": 1500,
        "line": "  submit(before, options) {"
      }
    ],
    "codeParams": [
      "before",
      "options"
    ],
    "docParams": [
      "before"
    ]
  },
  {
    "name": "NestedComponent#everyComponent",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 144,
        "line": "  /**"
      },
      {
        "lineNumber": 145,
        "line": "   * Perform a deep iteration over every component, including those"
      },
      {
        "lineNumber": 146,
        "line": "   * within other container based components."
      },
      {
        "lineNumber": 147,
        "line": "   *"
      },
      {
        "lineNumber": 148,
        "line": "   * @param {function} fn - Called for every component."
      },
      {
        "lineNumber": 149,
        "line": "   */"
      },
      {
        "lineNumber": 150,
        "line": "  everyComponent(fn, options) {"
      }
    ],
    "codeParams": [
      "fn",
      "options"
    ],
    "docParams": [
      "fn"
    ]
  },
  {
    "name": "NestedComponent#getComponent",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 201,
        "line": "  /**"
      },
      {
        "lineNumber": 202,
        "line": "   * Returns a component provided a key. This performs a deep search within the"
      },
      {
        "lineNumber": 203,
        "line": "   * component tree."
      },
      {
        "lineNumber": 204,
        "line": "   *"
      },
      {
        "lineNumber": 205,
        "line": "   * @param {string} key - The key of the component to retrieve."
      },
      {
        "lineNumber": 206,
        "line": "   * @param {function} fn - Called with the component once found."
      },
      {
        "lineNumber": 207,
        "line": "   * @return {Object} - The component that is located."
      },
      {
        "lineNumber": 208,
        "line": "   */"
      },
      {
        "lineNumber": 209,
        "line": "  getComponent(path, fn, originalPath) {"
      }
    ],
    "codeParams": [
      "path",
      "fn",
      "originalPath"
    ],
    "docParams": [
      "key",
      "fn"
    ]
  },
  {
    "name": "NestedComponent#createComponent",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 292,
        "line": "  /**"
      },
      {
        "lineNumber": 293,
        "line": "   * Create a new component and add it to the components array."
      },
      {
        "lineNumber": 294,
        "line": "   *"
      },
      {
        "lineNumber": 295,
        "line": "   * @param component"
      },
      {
        "lineNumber": 296,
        "line": "   * @param data"
      },
      {
        "lineNumber": 297,
        "line": "   */"
      },
      {
        "lineNumber": 298,
        "line": "  createComponent(component, options, data, before) {"
      }
    ],
    "codeParams": [
      "component",
      "options",
      "data",
      "before"
    ],
    "docParams": [
      "component",
      "data"
    ]
  },
  {
    "name": "NestedComponent#addComponents",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 359,
        "line": "  /**"
      },
      {
        "lineNumber": 360,
        "line": "   *"
      },
      {
        "lineNumber": 361,
        "line": "   * @param element"
      },
      {
        "lineNumber": 362,
        "line": "   * @param data"
      },
      {
        "lineNumber": 363,
        "line": "   */"
      },
      {
        "lineNumber": 364,
        "line": "  addComponents(data, options) {"
      }
    ],
    "codeParams": [
      "data",
      "options"
    ],
    "docParams": [
      "element",
      "data"
    ]
  },
  {
    "name": "NestedComponent#addComponent",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 376,
        "line": "  /**"
      },
      {
        "lineNumber": 377,
        "line": "   * Add a new component to the components array."
      },
      {
        "lineNumber": 378,
        "line": "   *"
      },
      {
        "lineNumber": 379,
        "line": "   * @param {Object} component - The component JSON schema to add."
      },
      {
        "lineNumber": 380,
        "line": "   * @param {Object} data - The submission data object to house the data for this component."
      },
      {
        "lineNumber": 381,
        "line": "   * @param {HTMLElement} before - A DOM element to insert this element before."
      },
      {
        "lineNumber": 382,
        "line": "   * @return {Component} - The created component instance."
      },
      {
        "lineNumber": 383,
        "line": "   */"
      },
      {
        "lineNumber": 384,
        "line": "  addComponent(component, data, before, noAdd) {"
      }
    ],
    "codeParams": [
      "component",
      "data",
      "before",
      "noAdd"
    ],
    "docParams": [
      "component",
      "data",
      "before"
    ]
  },
  {
    "name": "DataGridComponent#checkValidity",
    "filePath": "src/components/datagrid/DataGrid.js",
    "lines": [
      {
        "lineNumber": 437,
        "line": "  /**"
      },
      {
        "lineNumber": 438,
        "line": "   * Checks the validity of this datagrid."
      },
      {
        "lineNumber": 439,
        "line": "   *"
      },
      {
        "lineNumber": 440,
        "line": "   * @param data"
      },
      {
        "lineNumber": 441,
        "line": "   * @param dirty"
      },
      {
        "lineNumber": 442,
        "line": "   * @return {*}"
      },
      {
        "lineNumber": 443,
        "line": "   */"
      },
      {
        "lineNumber": 444,
        "line": "  checkValidity(data, dirty, row, silentCheck) {"
      }
    ],
    "codeParams": [
      "data",
      "dirty",
      "row",
      "silentCheck"
    ],
    "docParams": [
      "data",
      "dirty"
    ]
  },
  {
    "name": "SelectComponent#addOption",
    "filePath": "src/components/select/Select.js",
    "lines": [
      {
        "lineNumber": 213,
        "line": "  /**"
      },
      {
        "lineNumber": 214,
        "line": "   * Adds an option to the select dropdown."
      },
      {
        "lineNumber": 215,
        "line": "   *"
      },
      {
        "lineNumber": 216,
        "line": "   * @param value"
      },
      {
        "lineNumber": 217,
        "line": "   * @param label"
      },
      {
        "lineNumber": 218,
        "line": "   */"
      },
      {
        "lineNumber": 219,
        "line": "  addOption(value, label, attrs = {}, id = getRandomComponentId()) {"
      }
    ],
    "codeParams": [
      "value",
      "label",
      "attrs",
      "id"
    ],
    "docParams": [
      "value",
      "label"
    ]
  },
  {
    "name": "SelectComponent#addCurrentChoices",
    "filePath": "src/components/select/Select.js",
    "lines": [
      {
        "lineNumber": 1094,
        "line": "  /**"
      },
      {
        "lineNumber": 1095,
        "line": "   * @param {*} value"
      },
      {
        "lineNumber": 1096,
        "line": "   * @param {Array} items"
      },
      {
        "lineNumber": 1097,
        "line": "   */"
      },
      {
        "lineNumber": 1098,
        "line": "  addCurrentChoices(values, items, keyValue) {"
      }
    ],
    "codeParams": [
      "values",
      "items",
      "keyValue"
    ],
    "docParams": [
      "value",
      "items"
    ]
  },
  {
    "name": "checkInvalidDate",
    "filePath": "src/utils/calendarUtils.js",
    "lines": [
      {
        "lineNumber": 71,
        "line": "/**"
      },
      {
        "lineNumber": 72,
        "line": " * Checks the entered date for validity."
      },
      {
        "lineNumber": 73,
        "line": " *"
      },
      {
        "lineNumber": 74,
        "line": " * @param {String} value"
      },
      {
        "lineNumber": 75,
        "line": " *   The value to check."
      },
      {
        "lineNumber": 76,
        "line": " * @param {[String]} format"
      },
      {
        "lineNumber": 77,
        "line": " *   A moment formats."
      },
      {
        "lineNumber": 78,
        "line": " * @param {Date} maxDate"
      },
      {
        "lineNumber": 79,
        "line": " *   The max date."
      },
      {
        "lineNumber": 80,
        "line": " * @param {Date} minDate"
      },
      {
        "lineNumber": 81,
        "line": " *   The min date."
      },
      {
        "lineNumber": 82,
        "line": " * * @return {{message: string, result: boolean}}"
      },
      {
        "lineNumber": 83,
        "line": " */"
      },
      {
        "lineNumber": 84,
        "line": "export function checkInvalidDate(value, format, minDate, maxDate) {"
      }
    ],
    "codeParams": [
      "value",
      "format",
      "minDate",
      "maxDate"
    ],
    "docParams": [
      "value",
      "format",
      "maxDate",
      "minDate"
    ]
  },
  {
    "name": "getComponent",
    "filePath": "src/utils/formUtils.js",
    "lines": [
      {
        "lineNumber": 141,
        "line": "/**"
      },
      {
        "lineNumber": 142,
        "line": " * Get a component by its key"
      },
      {
        "lineNumber": 143,
        "line": " *"
      },
      {
        "lineNumber": 144,
        "line": " * @param {Object} components"
      },
      {
        "lineNumber": 145,
        "line": " *   The components to iterate."
      },
      {
        "lineNumber": 146,
        "line": " * @param {String|Object} key"
      },
      {
        "lineNumber": 147,
        "line": " *   The key of the component to get, or a query of the component to search."
      },
      {
        "lineNumber": 148,
        "line": " *"
      },
      {
        "lineNumber": 149,
        "line": " * @returns {Object}"
      },
      {
        "lineNumber": 150,
        "line": " *   The component that matches the given key, or undefined if not found."
      },
      {
        "lineNumber": 151,
        "line": " */"
      },
      {
        "lineNumber": 152,
        "line": "export function getComponent(components, key, includeAll) {"
      }
    ],
    "codeParams": [
      "components",
      "key",
      "includeAll"
    ],
    "docParams": [
      "components",
      "key"
    ]
  },
  {
    "name": "findComponent",
    "filePath": "src/utils/formUtils.js",
    "lines": [
      {
        "lineNumber": 192,
        "line": "/**"
      },
      {
        "lineNumber": 193,
        "line": " * This function will find a component in a form and return the component AND THE PATH to the component in the form."
      },
      {
        "lineNumber": 194,
        "line": " * Path to the component is stored as an array of nested components and their indexes.The Path is being filled recursively"
      },
      {
        "lineNumber": 195,
        "line": " * when you iterating through the nested structure."
      },
      {
        "lineNumber": 196,
        "line": " * If the component is not found the callback won't be called and function won't return anything."
      },
      {
        "lineNumber": 197,
        "line": " *"
      },
      {
        "lineNumber": 198,
        "line": " * @param components"
      },
      {
        "lineNumber": 199,
        "line": " * @param key"
      },
      {
        "lineNumber": 200,
        "line": " * @param fn"
      },
      {
        "lineNumber": 201,
        "line": " * @param path"
      },
      {
        "lineNumber": 202,
        "line": " * @returns {*}"
      },
      {
        "lineNumber": 203,
        "line": " */"
      },
      {
        "lineNumber": 204,
        "line": "export function findComponent(components, key, path, fn) {"
      }
    ],
    "codeParams": [
      "components",
      "key",
      "path",
      "fn"
    ],
    "docParams": [
      "components",
      "key",
      "fn",
      "path"
    ]
  },
  {
    "name": "ValidationChecker#checkValidations",
    "filePath": "src/validator/Validator.js",
    "lines": [
      {
        "lineNumber": 943,
        "line": "  /**"
      },
      {
        "lineNumber": 944,
        "line": "   * Use the new validations engine to evaluate any errors."
      },
      {
        "lineNumber": 945,
        "line": "   *"
      },
      {
        "lineNumber": 946,
        "line": "   * @param component"
      },
      {
        "lineNumber": 947,
        "line": "   * @param validations"
      },
      {
        "lineNumber": 948,
        "line": "   * @param data"
      },
      {
        "lineNumber": 949,
        "line": "   * @param row"
      },
      {
        "lineNumber": 950,
        "line": "   * @param values"
      },
      {
        "lineNumber": 951,
        "line": "   * @returns {any[]}"
      },
      {
        "lineNumber": 952,
        "line": "   */"
      },
      {
        "lineNumber": 953,
        "line": "  checkValidations(component, validations, data, row, values, async) {"
      }
    ],
    "codeParams": [
      "component",
      "validations",
      "data",
      "row",
      "values",
      "async"
    ],
    "docParams": [
      "component",
      "validations",
      "data",
      "row",
      "values"
    ]
  }
]